//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.954.0
namespace Webhook
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.954.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("WebhookType", Namespace="http://integration.deposco.com/webhook")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WebhookType
    {
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("id", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long IdValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool IdValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> Id
        {
            get
            {
                if (this.IdValueSpecified)
                {
                    return this.IdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IdValue = value.GetValueOrDefault();
                this.IdValueSpecified = value.HasValue;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _events;
        
        [System.Xml.Serialization.XmlArrayAttribute("events", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("event", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<string> Events
        {
            get
            {
                return _events;
            }
            private set
            {
                _events = value;
            }
        }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EventsSpecified
        {
            get
            {
                return (this.Events.Count != 0);
            }
        }
        
        /// <summary>
        /// </summary>
        public WebhookType()
        {
            this._events = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("callbackUrl", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CallbackUrl { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("secretKey", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SecretKey { get; set; }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("includeBusinessUnits", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IncludeBusinessUnitsValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool IncludeBusinessUnitsValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> IncludeBusinessUnits
        {
            get
            {
                if (this.IncludeBusinessUnitsValueSpecified)
                {
                    return this.IncludeBusinessUnitsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IncludeBusinessUnitsValue = value.GetValueOrDefault();
                this.IncludeBusinessUnitsValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("createdDateTime", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime CreatedDateTimeValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool CreatedDateTimeValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> CreatedDateTime
        {
            get
            {
                if (this.CreatedDateTimeValueSpecified)
                {
                    return this.CreatedDateTimeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreatedDateTimeValue = value.GetValueOrDefault();
                this.CreatedDateTimeValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("updatedDateTime", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime UpdatedDateTimeValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool UpdatedDateTimeValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> UpdatedDateTime
        {
            get
            {
                if (this.UpdatedDateTimeValueSpecified)
                {
                    return this.UpdatedDateTimeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UpdatedDateTimeValue = value.GetValueOrDefault();
                this.UpdatedDateTimeValueSpecified = value.HasValue;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.954.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Events", Namespace="http://integration.deposco.com/webhook")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Events
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _event;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("event", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<string> Event
        {
            get
            {
                return _event;
            }
            private set
            {
                _event = value;
            }
        }
        
        /// <summary>
        /// </summary>
        public Events()
        {
            this._event = new System.Collections.ObjectModel.Collection<string>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.954.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("WebhookCollection", Namespace="http://integration.deposco.com/webhook")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("webhooks", Namespace="http://integration.deposco.com/webhook")]
    public partial class WebhookCollection
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<WebhookType> _webhook;
        
        [System.Xml.Serialization.XmlElementAttribute("webhook", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<WebhookType> Webhook
        {
            get
            {
                return _webhook;
            }
            private set
            {
                _webhook = value;
            }
        }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WebhookSpecified
        {
            get
            {
                return (this.Webhook.Count != 0);
            }
        }
        
        /// <summary>
        /// </summary>
        public WebhookCollection()
        {
            this._webhook = new System.Collections.ObjectModel.Collection<WebhookType>();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("count", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long CountValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool CountValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> Count
        {
            get
            {
                if (this.CountValueSpecified)
                {
                    return this.CountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CountValue = value.GetValueOrDefault();
                this.CountValueSpecified = value.HasValue;
            }
        }
    }
}
