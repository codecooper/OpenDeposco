//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.954.0
namespace Line
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.954.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OrderLineCollection", Namespace="http://integration.deposco.com/line")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("orderLines", Namespace="http://integration.deposco.com/line")]
    public partial class OrderLineCollection
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<OrderLineType> _orderLine;
        
        [System.Xml.Serialization.XmlElementAttribute("orderLine", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<OrderLineType> OrderLine
        {
            get
            {
                return _orderLine;
            }
            private set
            {
                _orderLine = value;
            }
        }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OrderLineSpecified
        {
            get
            {
                return (this.OrderLine.Count != 0);
            }
        }
        
        /// <summary>
        /// </summary>
        public OrderLineCollection()
        {
            this._orderLine = new System.Collections.ObjectModel.Collection<OrderLineType>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.954.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OrderLineType", Namespace="http://integration.deposco.com/line")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OrderLineType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("businessUnit", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string BusinessUnit { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("type", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Type { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("orderNumber", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string OrderNumber { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("lineNumber", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string LineNumber { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("customerLineNumber", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CustomerLineNumber { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("importReference", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ImportReference { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("exportReference", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ExportReference { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private string _lineStatus = "New";
        
        [System.ComponentModel.DefaultValueAttribute("New")]
        [System.Xml.Serialization.XmlElementAttribute("lineStatus", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string LineStatus
        {
            get
            {
                return _lineStatus;
            }
            set
            {
                _lineStatus = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("coLine", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CoLine { get; set; }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("orderPackQuantity", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double OrderPackQuantityValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool OrderPackQuantityValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> OrderPackQuantity
        {
            get
            {
                if (this.OrderPackQuantityValueSpecified)
                {
                    return this.OrderPackQuantityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OrderPackQuantityValue = value.GetValueOrDefault();
                this.OrderPackQuantityValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("canceledPackQuantity", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double CanceledPackQuantityValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool CanceledPackQuantityValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> CanceledPackQuantity
        {
            get
            {
                if (this.CanceledPackQuantityValueSpecified)
                {
                    return this.CanceledPackQuantityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CanceledPackQuantityValue = value.GetValueOrDefault();
                this.CanceledPackQuantityValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("receivedPackQuantity", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double ReceivedPackQuantityValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ReceivedPackQuantityValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> ReceivedPackQuantity
        {
            get
            {
                if (this.ReceivedPackQuantityValueSpecified)
                {
                    return this.ReceivedPackQuantityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReceivedPackQuantityValue = value.GetValueOrDefault();
                this.ReceivedPackQuantityValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("receivedDamagedPackQuantity", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double ReceivedDamagedPackQuantityValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ReceivedDamagedPackQuantityValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> ReceivedDamagedPackQuantity
        {
            get
            {
                if (this.ReceivedDamagedPackQuantityValueSpecified)
                {
                    return this.ReceivedDamagedPackQuantityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReceivedDamagedPackQuantityValue = value.GetValueOrDefault();
                this.ReceivedDamagedPackQuantityValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("shippedPackQuantity", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double ShippedPackQuantityValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ShippedPackQuantityValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> ShippedPackQuantity
        {
            get
            {
                if (this.ShippedPackQuantityValueSpecified)
                {
                    return this.ShippedPackQuantityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ShippedPackQuantityValue = value.GetValueOrDefault();
                this.ShippedPackQuantityValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("soldPackQuantity", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double SoldPackQuantityValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool SoldPackQuantityValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> SoldPackQuantity
        {
            get
            {
                if (this.SoldPackQuantityValueSpecified)
                {
                    return this.SoldPackQuantityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SoldPackQuantityValue = value.GetValueOrDefault();
                this.SoldPackQuantityValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("shortagePackQuantity", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double ShortagePackQuantityValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ShortagePackQuantityValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> ShortagePackQuantity
        {
            get
            {
                if (this.ShortagePackQuantityValueSpecified)
                {
                    return this.ShortagePackQuantityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ShortagePackQuantityValue = value.GetValueOrDefault();
                this.ShortagePackQuantityValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("allocatedQuantity", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double AllocatedQuantityValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool AllocatedQuantityValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> AllocatedQuantity
        {
            get
            {
                if (this.AllocatedQuantityValueSpecified)
                {
                    return this.AllocatedQuantityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AllocatedQuantityValue = value.GetValueOrDefault();
                this.AllocatedQuantityValueSpecified = value.HasValue;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("description", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Description { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("importType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ImportType { get; set; }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("unallocatedQuantity", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double UnallocatedQuantityValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool UnallocatedQuantityValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> UnallocatedQuantity
        {
            get
            {
                if (this.UnallocatedQuantityValueSpecified)
                {
                    return this.UnallocatedQuantityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UnallocatedQuantityValue = value.GetValueOrDefault();
                this.UnallocatedQuantityValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("returnedPackQuantity", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double ReturnedPackQuantityValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ReturnedPackQuantityValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> ReturnedPackQuantity
        {
            get
            {
                if (this.ReturnedPackQuantityValueSpecified)
                {
                    return this.ReturnedPackQuantityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReturnedPackQuantityValue = value.GetValueOrDefault();
                this.ReturnedPackQuantityValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("pickedPackQuantity", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double PickedPackQuantityValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PickedPackQuantityValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> PickedPackQuantity
        {
            get
            {
                if (this.PickedPackQuantityValueSpecified)
                {
                    return this.PickedPackQuantityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PickedPackQuantityValue = value.GetValueOrDefault();
                this.PickedPackQuantityValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("releasedQuantity", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double ReleasedQuantityValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ReleasedQuantityValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> ReleasedQuantity
        {
            get
            {
                if (this.ReleasedQuantityValueSpecified)
                {
                    return this.ReleasedQuantityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReleasedQuantityValue = value.GetValueOrDefault();
                this.ReleasedQuantityValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("taxableTotal", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double TaxableTotalValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool TaxableTotalValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> TaxableTotal
        {
            get
            {
                if (this.TaxableTotalValueSpecified)
                {
                    return this.TaxableTotalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TaxableTotalValue = value.GetValueOrDefault();
                this.TaxableTotalValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("taxable", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool TaxableValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool TaxableValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> Taxable
        {
            get
            {
                if (this.TaxableValueSpecified)
                {
                    return this.TaxableValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TaxableValue = value.GetValueOrDefault();
                this.TaxableValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("hardAllocation", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool HardAllocationValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool HardAllocationValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> HardAllocation
        {
            get
            {
                if (this.HardAllocationValueSpecified)
                {
                    return this.HardAllocationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HardAllocationValue = value.GetValueOrDefault();
                this.HardAllocationValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("weight", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double WeightValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool WeightValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> Weight
        {
            get
            {
                if (this.WeightValueSpecified)
                {
                    return this.WeightValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.WeightValue = value.GetValueOrDefault();
                this.WeightValueSpecified = value.HasValue;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("weightUom", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string WeightUom { get; set; }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("platinumLineNo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int PlatinumLineNoValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PlatinumLineNoValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<int> PlatinumLineNo
        {
            get
            {
                if (this.PlatinumLineNoValueSpecified)
                {
                    return this.PlatinumLineNoValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PlatinumLineNoValue = value.GetValueOrDefault();
                this.PlatinumLineNoValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("backordered", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool BackorderedValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool BackorderedValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> Backordered
        {
            get
            {
                if (this.BackorderedValueSpecified)
                {
                    return this.BackorderedValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BackorderedValue = value.GetValueOrDefault();
                this.BackorderedValueSpecified = value.HasValue;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("pickWave", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string PickWave { get; set; }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("preallocated", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool PreallocatedValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PreallocatedValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> Preallocated
        {
            get
            {
                if (this.PreallocatedValueSpecified)
                {
                    return this.PreallocatedValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PreallocatedValue = value.GetValueOrDefault();
                this.PreallocatedValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("dropShip", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool DropShipValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DropShipValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> DropShip
        {
            get
            {
                if (this.DropShipValueSpecified)
                {
                    return this.DropShipValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DropShipValue = value.GetValueOrDefault();
                this.DropShipValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("crossDock", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool CrossDockValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool CrossDockValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> CrossDock
        {
            get
            {
                if (this.CrossDockValueSpecified)
                {
                    return this.CrossDockValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CrossDockValue = value.GetValueOrDefault();
                this.CrossDockValueSpecified = value.HasValue;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("itemNumber", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ItemNumber { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Item.ItemType Item { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("itemExternalReference", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ItemExternalReference { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("pack", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Pack.PackType Pack { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("zoneNumber", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ZoneNumber { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("productCategory", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ProductCategory { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("priceCode", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string PriceCode { get; set; }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("unitPrice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double UnitPriceValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool UnitPriceValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> UnitPrice
        {
            get
            {
                if (this.UnitPriceValueSpecified)
                {
                    return this.UnitPriceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UnitPriceValue = value.GetValueOrDefault();
                this.UnitPriceValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("shippingAmount", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double ShippingAmountValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ShippingAmountValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> ShippingAmount
        {
            get
            {
                if (this.ShippingAmountValueSpecified)
                {
                    return this.ShippingAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ShippingAmountValue = value.GetValueOrDefault();
                this.ShippingAmountValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("taxCost", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double TaxCostValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool TaxCostValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> TaxCost
        {
            get
            {
                if (this.TaxCostValueSpecified)
                {
                    return this.TaxCostValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TaxCostValue = value.GetValueOrDefault();
                this.TaxCostValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("untaxableTotal", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double UntaxableTotalValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool UntaxableTotalValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> UntaxableTotal
        {
            get
            {
                if (this.UntaxableTotalValueSpecified)
                {
                    return this.UntaxableTotalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UntaxableTotalValue = value.GetValueOrDefault();
                this.UntaxableTotalValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("lineTotal", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double LineTotalValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool LineTotalValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> LineTotal
        {
            get
            {
                if (this.LineTotalValueSpecified)
                {
                    return this.LineTotalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LineTotalValue = value.GetValueOrDefault();
                this.LineTotalValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("unitCost", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double UnitCostValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool UnitCostValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> UnitCost
        {
            get
            {
                if (this.UnitCostValueSpecified)
                {
                    return this.UnitCostValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UnitCostValue = value.GetValueOrDefault();
                this.UnitCostValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("extendedTotal", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double ExtendedTotalValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ExtendedTotalValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> ExtendedTotal
        {
            get
            {
                if (this.ExtendedTotalValueSpecified)
                {
                    return this.ExtendedTotalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ExtendedTotalValue = value.GetValueOrDefault();
                this.ExtendedTotalValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("discountAmount", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double DiscountAmountValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DiscountAmountValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> DiscountAmount
        {
            get
            {
                if (this.DiscountAmountValueSpecified)
                {
                    return this.DiscountAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DiscountAmountValue = value.GetValueOrDefault();
                this.DiscountAmountValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("catchWeight", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double CatchWeightValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool CatchWeightValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> CatchWeight
        {
            get
            {
                if (this.CatchWeightValueSpecified)
                {
                    return this.CatchWeightValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CatchWeightValue = value.GetValueOrDefault();
                this.CatchWeightValueSpecified = value.HasValue;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("serialNumber", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SerialNumber { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("invoice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Invoice { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("customAttribute1", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CustomAttribute1 { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("customAttribute2", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CustomAttribute2 { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("customAttribute3", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CustomAttribute3 { get; set; }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("sortOrder", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int SortOrderValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool SortOrderValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<int> SortOrder
        {
            get
            {
                if (this.SortOrderValueSpecified)
                {
                    return this.SortOrderValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SortOrderValue = value.GetValueOrDefault();
                this.SortOrderValueSpecified = value.HasValue;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("productCode", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ProductCode { get; set; }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("createdDateTime", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime CreatedDateTimeValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool CreatedDateTimeValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> CreatedDateTime
        {
            get
            {
                if (this.CreatedDateTimeValueSpecified)
                {
                    return this.CreatedDateTimeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreatedDateTimeValue = value.GetValueOrDefault();
                this.CreatedDateTimeValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("updatedDateTime", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime UpdatedDateTimeValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool UpdatedDateTimeValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> UpdatedDateTime
        {
            get
            {
                if (this.UpdatedDateTimeValueSpecified)
                {
                    return this.UpdatedDateTimeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UpdatedDateTimeValue = value.GetValueOrDefault();
                this.UpdatedDateTimeValueSpecified = value.HasValue;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("createdBy", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CreatedBy { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("updatedBy", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string UpdatedBy { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("inboundLPN", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string InboundLpn { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("masterInboundLPN", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string MasterInboundLpn { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("lotNumber", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string LotNumber { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("shipTo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ShipTo { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("shipFrom", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ShipFrom { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Types.CustomFieldType> _customFields;
        
        [System.Xml.Serialization.XmlArrayAttribute("customFields", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("customField", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<Types.CustomFieldType> CustomFields
        {
            get
            {
                return _customFields;
            }
            private set
            {
                _customFields = value;
            }
        }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomFieldsSpecified
        {
            get
            {
                return (this.CustomFields.Count != 0);
            }
        }
        
        /// <summary>
        /// </summary>
        public OrderLineType()
        {
            this._customFields = new System.Collections.ObjectModel.Collection<Types.CustomFieldType>();
            this._carrierSpecialServices = new System.Collections.ObjectModel.Collection<Types.CarrierSpecialServiceType>();
            this._extendedEntities = new System.Collections.ObjectModel.Collection<Types.ExtendedEntityType>();
            this._channels = new System.Collections.ObjectModel.Collection<Types.ChannelFieldType>();
            this._notes = new System.Collections.ObjectModel.Collection<Types.NoteType>();
            this._customMappings = new System.Collections.ObjectModel.Collection<Types.CustomMapType>();
            this._receiptLines = new System.Collections.ObjectModel.Collection<Receiptline.ReceiptLineType>();
            this._cartonizedContainers = new System.Collections.ObjectModel.Collection<Container.ContainerType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Types.CarrierSpecialServiceType> _carrierSpecialServices;
        
        [System.Xml.Serialization.XmlArrayAttribute("carrierSpecialServices", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("carrierSpecialService", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<Types.CarrierSpecialServiceType> CarrierSpecialServices
        {
            get
            {
                return _carrierSpecialServices;
            }
            private set
            {
                _carrierSpecialServices = value;
            }
        }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CarrierSpecialServicesSpecified
        {
            get
            {
                return (this.CarrierSpecialServices.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Types.ExtendedEntityType> _extendedEntities;
        
        [System.Xml.Serialization.XmlArrayAttribute("extendedEntities", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("entity", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<Types.ExtendedEntityType> ExtendedEntities
        {
            get
            {
                return _extendedEntities;
            }
            private set
            {
                _extendedEntities = value;
            }
        }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExtendedEntitiesSpecified
        {
            get
            {
                return (this.ExtendedEntities.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Types.ChannelFieldType> _channels;
        
        [System.Xml.Serialization.XmlArrayAttribute("channels", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("channel", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<Types.ChannelFieldType> Channels
        {
            get
            {
                return _channels;
            }
            private set
            {
                _channels = value;
            }
        }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChannelsSpecified
        {
            get
            {
                return (this.Channels.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Types.NoteType> _notes;
        
        [System.Xml.Serialization.XmlArrayAttribute("notes", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("note", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<Types.NoteType> Notes
        {
            get
            {
                return _notes;
            }
            private set
            {
                _notes = value;
            }
        }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NotesSpecified
        {
            get
            {
                return (this.Notes.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Types.CustomMapType> _customMappings;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlArrayAttribute("customMappings", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("customMapping", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<Types.CustomMapType> CustomMappings
        {
            get
            {
                return _customMappings;
            }
            private set
            {
                _customMappings = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Receiptline.ReceiptLineType> _receiptLines;
        
        [System.Xml.Serialization.XmlArrayAttribute("receiptLines", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("receiptLine", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<Receiptline.ReceiptLineType> ReceiptLines
        {
            get
            {
                return _receiptLines;
            }
            private set
            {
                _receiptLines = value;
            }
        }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReceiptLinesSpecified
        {
            get
            {
                return (this.ReceiptLines.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("shipToAddressNumber", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ShipToAddressNumber { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("shipToAddress", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Types.AddressType ShipToAddress { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("inventoryCondition", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string InventoryCondition { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("inventoryAttribute1", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string InventoryAttribute1 { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("inventoryAttribute2", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string InventoryAttribute2 { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("inventoryAttribute3", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string InventoryAttribute3 { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("inventoryAttribute4", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string InventoryAttribute4 { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("inventoryAttribute5", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string InventoryAttribute5 { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("inventoryAttribute6", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string InventoryAttribute6 { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("inventoryAttribute7", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string InventoryAttribute7 { get; set; }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("plannedArrivalDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime PlannedArrivalDateValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PlannedArrivalDateValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> PlannedArrivalDate
        {
            get
            {
                if (this.PlannedArrivalDateValueSpecified)
                {
                    return this.PlannedArrivalDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PlannedArrivalDateValue = value.GetValueOrDefault();
                this.PlannedArrivalDateValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("plannedShipDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime PlannedShipDateValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PlannedShipDateValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> PlannedShipDate
        {
            get
            {
                if (this.PlannedShipDateValueSpecified)
                {
                    return this.PlannedShipDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PlannedShipDateValue = value.GetValueOrDefault();
                this.PlannedShipDateValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("expirationDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime ExpirationDateValue { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ExpirationDateValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate
        {
            get
            {
                if (this.ExpirationDateValueSpecified)
                {
                    return this.ExpirationDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ExpirationDateValue = value.GetValueOrDefault();
                this.ExpirationDateValueSpecified = value.HasValue;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Container.ContainerType> _cartonizedContainers;
        
        [System.Xml.Serialization.XmlArrayAttribute("cartonizedContainers", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("container", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<Container.ContainerType> CartonizedContainers
        {
            get
            {
                return _cartonizedContainers;
            }
            private set
            {
                _cartonizedContainers = value;
            }
        }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CartonizedContainersSpecified
        {
            get
            {
                return (this.CartonizedContainers.Count != 0);
            }
        }
    }
}
